{"name": "无效等价类+边界值: a, b", "status": "broken", "statusDetails": {"message": "TypeError: '>' not supported between instances of 'str' and 'int'", "trace": "self = <case.pytest_allure.testcase.test_add.TestAdd object at 0x10e027d90>\nx = 'a', y = 'b', expected = '参数大小超出范围'\ncalculator = <case.pytest_allure.func.calculator.Calculator object at 0x10e08fd60>\n\n    @pytest.mark.no_valid\n    @allure.title(\"无效等价类+边界值: {x}, {y}\")\n    @pytest.mark.parametrize(\"x, y, expected\", get_data(\"no_valid\"))\n    def test_02(self, x, y, expected, calculator):\n        logging.info(f\"无效等价类{x}, {y}\")\n>       assert calculator.add(x, y) == expected\n\ntestcase/test_add.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <case.pytest_allure.func.calculator.Calculator object at 0x10e08fd60>\na = 'a', b = 'b'\n\n    def add(self, a, b):\n>       if a > 99 or a < -99 or b > 99 or b < -99:\nE       TypeError: '>' not supported between instances of 'str' and 'int'\n\nfunc/calculator.py:3: TypeError"}, "attachments": [{"name": "log", "source": "3a706141-9546-4279-9667-bb4e92a8d21c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "x", "value": "'a'"}, {"name": "y", "value": "'b'"}, {"name": "expected", "value": "'参数大小超出范围'"}], "start": 1683126183520, "stop": 1683126183521, "uuid": "5db31bd5-6f51-40f3-be5c-336f7e3b99f6", "historyId": "7c04edf89aaecdd65f26034fcb871b64", "testCaseId": "8ac74fd53d3b3b0044244666bd37365e", "fullName": "testcase.test_add.TestAdd#test_02", "labels": [{"name": "tag", "value": "no_valid"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_add"}, {"name": "subSuite", "value": "TestAdd"}, {"name": "host", "value": "AnndeMacBook-Pro-2.local"}, {"name": "thread", "value": "14644-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_add"}]}