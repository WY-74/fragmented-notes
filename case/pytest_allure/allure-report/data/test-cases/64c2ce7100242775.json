{"uid":"64c2ce7100242775","name":"有效等价类+边界值: a, b","fullName":"testcase.test_div.TestDiv#test_02","historyId":"b47263c8dbb2a56ad07b1103bf11a46e","time":{"start":1683126183636,"stop":1683126183636,"duration":0},"status":"broken","statusMessage":"TypeError: '>' not supported between instances of 'str' and 'int'","statusTrace":"self = <case.pytest_allure.testcase.test_div.TestDiv object at 0x10e08e980>\nx = 'a', y = 'b', expected = '参数大小超出范围'\ncalculator = <case.pytest_allure.func.calculator.Calculator object at 0x10e08fd60>\n\n    @pytest.mark.no_valid\n    @allure.title(\"有效等价类+边界值: {x}, {y}\")\n    @pytest.mark.parametrize(\"x, y, expected\", get_data(\"no_valid\"))\n    def test_02(self, x, y, expected, calculator):\n        logging.info(f\"无效等价类{x}, {y}\")\n>       assert calculator.div(x, y) == expected\n\ntestcase/test_div.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <case.pytest_allure.func.calculator.Calculator object at 0x10e08fd60>\na = 'a', b = 'b'\n\n    def div(self, a, b):\n>       if a > 99 or a < -99 or b > 99 or b < -99:\nE       TypeError: '>' not supported between instances of 'str' and 'int'\n\nfunc/calculator.py:10: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1683126183417,"stop":1683126183492,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"calculator","time":{"start":1683126183492,"stop":1683126183492,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"TypeError: '>' not supported between instances of 'str' and 'int'","statusTrace":"self = <case.pytest_allure.testcase.test_div.TestDiv object at 0x10e08e980>\nx = 'a', y = 'b', expected = '参数大小超出范围'\ncalculator = <case.pytest_allure.func.calculator.Calculator object at 0x10e08fd60>\n\n    @pytest.mark.no_valid\n    @allure.title(\"有效等价类+边界值: {x}, {y}\")\n    @pytest.mark.parametrize(\"x, y, expected\", get_data(\"no_valid\"))\n    def test_02(self, x, y, expected, calculator):\n        logging.info(f\"无效等价类{x}, {y}\")\n>       assert calculator.div(x, y) == expected\n\ntestcase/test_div.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <case.pytest_allure.func.calculator.Calculator object at 0x10e08fd60>\na = 'a', b = 'b'\n\n    def div(self, a, b):\n>       if a > 99 or a < -99 or b > 99 or b < -99:\nE       TypeError: '>' not supported between instances of 'str' and 'int'\n\nfunc/calculator.py:10: TypeError","steps":[],"attachments":[{"uid":"696866d91d7a5bd2","name":"log","source":"696866d91d7a5bd2.txt","type":"text/plain","size":57}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"no_valid"},{"name":"parentSuite","value":"testcase"},{"name":"suite","value":"test_div"},{"name":"subSuite","value":"TestDiv"},{"name":"host","value":"AnndeMacBook-Pro-2.local"},{"name":"thread","value":"14644-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.test_div"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected","value":"'参数大小超出范围'"},{"name":"x","value":"'a'"},{"name":"y","value":"'b'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["no_valid"]},"source":"64c2ce7100242775.json","parameterValues":["'参数大小超出范围'","'a'","'b'"]}